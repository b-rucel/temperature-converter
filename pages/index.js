import Head from 'next/head'
import Image from 'next/image'
import { useRef, useState } from 'react'
import { Inter } from '@next/font/google'
import styles from '../styles/Home.module.css'

const inter = Inter({ subsets: ['latin'] })

// conversionC = (fahrenheit - 32) * 5 / 9;
// conversionK = conversionC + 273;

function cToK(celsius) {
  var cToKTemp = Number(celsius) + 273.15
  return cToKTemp + ' \xB0K'
}

function cToF(celsius) 
{
  var cTemp = celsius;
  var cToFahr = cTemp * 9 / 5 + 32;
  var message = cTemp+'\xB0C is ' + cToFahr + ' \xB0F.';
    console.log(message);
  return cToFahr + ' \xB0F'
}

function fToC(fahrenheit) 
{
  var fTemp = fahrenheit;
  var fToCel = (fTemp - 32) * 5 / 9;
  var message = fTemp+'\xB0F is ' + fToCel + '\xB0C.';
    console.log(message);
  return fToCel + '\xB0C'
} 




export default function Home() {
  const [userinput, setUserinput] = useState(0)
  const [measurement, setMeasurement] = useState('C')
  const [convertTo, setConvertTo] = useState('F')
  const [result, setResult] = useState(0)

  function handleClick(e) {
    e.preventDefault()

    if (measurement === 'C' && convertTo === 'F') {
      console.log('celsius to farenheit')
      setResult(cToF(userinput))
    } else if (measurement === 'F' && convertTo === 'C') {
      console.log('farenheit to celsius')
      setResult(fToC(userinput))
    } else if (measurement === 'C' && convertTo === 'K') {
      console.log('celsius to kelvin')
      setResult(cToK(userinput))
    } else if (measurement === 'K' && convertTo === 'C') {
      console.log('kelvin to celsius')
    } else if (measurement === 'F' && convertTo === 'K') {
      console.log('farenheit to kelvin')
    } else if (measurement === 'K' && convertTo === 'F') {
      console.log('kelvin to farenheit')
    }
  }

  
  return (
    <>
      <Head>
        <title>My Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`flex items-center justify-center h-screen`}>

        <div className="w-full lg:flex lg:items-center lg:p-24 lg:my-auto lg:max-w-7xl">
          <div className="h-screen w-full bg-emerald-600 p-[3px] lg:flex lg:mx-auto lg:overflow-hidden lg:rounded lg:h-fit">

            <div className="relative bg-white p-6 lg:h-1/4 lg:w-1/2">
              <div className="space-y-4">
                <div className={styles.card}>

                  <div className="col-12 col-md-11 pt-4">
                    <span className="text-2xl font-semibold">Enter Temperature</span>
                  </div>

                  <div className="col-12 col-md-11 p-4">
                    <label htmlFor="degree" className="block font-medium text-gray-700">Degree</label>
                    <div className="relative mt-1 rounded-md shadow-sm">
                      <input type="number" name="degree" id="degree" className="block w-full py-[9px] rounded border-gray-300 pl-3 pr-12 text-base focus:border-indigo-500 focus:ring-indigo-500" placeholder="0"
                        onChange={e => setUserinput(e.target.value)} />
                      <div className="absolute inset-y-0 right-0 flex items-center">
                        <label htmlFor="temperature" className="sr-only">Degree</label>
                        <select onChange={e => setMeasurement(e.target.value)} defaultValue="" id="temperature" name="temperature" className="h-full rounded-md border-transparent bg-transparent py-0 pl-2 pr-9 text-gray-500 focus:border-indigo-500 focus:ring-indigo-500">
                          <option value="C">°C</option>
                          <option value="F">°F</option>
                          <option value="K">°K</option>
                        </select>
                      </div>
                    </div>
                  </div>

                  <div className="col-12 col-md-11 p-4">                   
                    <label htmlFor="unit" className="block font-medium text-gray-700">Convert To</label>
                    <select onChange={e => setConvertTo(e.target.value)} defaultValue="F" id="unit" className="form-select appearance-none rounded m-0
                      block w-full py-[9px] text-base font-normal text-gray-700 bg-white bg-clip-padding bg-no-repeat border border-solid border-gray-300
                      transition ease-in-out focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none">
                        <option value="F">Fahrenheit (°F)</option>
                        <option value="C">Celcius (°C)</option>
                        <option value="K">Kelvin (K)</option>
                    </select>
                  </div>

                  <div className="col-12 col-md-11 p-4">
                    <button type="button" className="flex break-inside bg-black rounded w-1/2 px-8 py-3 mb-4 w-full dark:bg-slate-800 dark:text-white mx-auto" 
                      onClick={handleClick}>
                      <div className="flex items-center justify-between flex-1">
                        <span className="text-lg font-medium text-white">Convert</span>
                        <svg width="17" height="17" viewBox="0 0 17 17" fill="none" xmlns="http://www.w3.org/2000/svg">
                          <path fillRule="evenodd" clipRule="evenodd"
                            d="M0 8.71423C0 8.47852 0.094421 8.25246 0.262491 8.08578C0.430562 7.91911 0.658514 7.82547 0.896201 7.82547H13.9388L8.29808 2.23337C8.12979 2.06648 8.03525 1.84013 8.03525 1.60412C8.03525 1.36811 8.12979 1.14176 8.29808 0.974875C8.46636 0.807989 8.6946 0.714233 8.93259 0.714233C9.17057 0.714233 9.39882 0.807989 9.5671 0.974875L16.7367 8.08499C16.8202 8.16755 16.8864 8.26562 16.9316 8.3736C16.9767 8.48158 17 8.59733 17 8.71423C17 8.83114 16.9767 8.94689 16.9316 9.05487C16.8864 9.16284 16.8202 9.26092 16.7367 9.34348L9.5671 16.4536C9.39882 16.6205 9.17057 16.7142 8.93259 16.7142C8.6946 16.7142 8.46636 16.6205 8.29808 16.4536C8.12979 16.2867 8.03525 16.0604 8.03525 15.8243C8.03525 15.5883 8.12979 15.362 8.29808 15.1951L13.9388 9.603H0.896201C0.658514 9.603 0.430562 9.50936 0.262491 9.34268C0.094421 9.17601 0 8.94995 0 8.71423Z"
                            fill="white" />
                        </svg>
                      </div>
                    </button>
                  </div>

                </div>
              </div>
            </div>

            <div className="relative bg-emerald-600 p-6 h-2/5 lg:w-1/2 lg:h-auto">
              <div className="flex items-center justify-center h-full">
                <p className={`text-white text-5xl`}>{result}</p>
              </div>
            </div>

          </div>
        </div>

      </main>
    </>
  )
}
